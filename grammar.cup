
import java_cup.runtime.*;

terminal CLASS;           //2
terminal AND;             //3
terminal ELSE;            //4
terminal IF;              //5
terminal WHILE;           //6
terminal READ;            //7
terminal PRINT;           //8
terminal PRINTLN;         //9
terminal RETURN;          //10
terminal OR;              //11
terminal TIMES;           //12
terminal PLUS;            //13
terminal INC;        //14
terminal MINUS;           //15
terminal DEC;      //16
terminal DIVIDE;          //19
terminal SEMI;            //20
terminal LEFT_PAREN;      //21
terminal RT_PAREN;        //22
terminal LEFT_BRACE;      //23
terminal RT_BRACE;        //24
terminal LEFT_BRKT;       //25
terminal RT_BRKT;         //26
terminal EQ;              //27
terminal GTR;             //28
terminal LESS;            //29
terminal LESS_EQ;         //30
terminal GTR_EQ;          //31
terminal NOT_EQ;          //32
terminal NOT;             //33
terminal QUEST;       //34
terminal COLON;           //35
terminal ASSMNT;          //36
terminal COMMA;           //37
terminal FINAL;           //38
terminal VOID;            //39
terminal TRUE;            //40
terminal FALSE;           //41

terminal String INT;      //42
terminal String FLOAT;    //43
terminal String BOOL;     //44
terminal String CHAR;     //45

terminal String ID;       //46
terminal int INTLIT;      //47
terminal double FLOATLIT; //48
terminal String CHARLIT;  //49
terminal String STRINGLIT;//50

// non Terminals
non terminal Program program;
non terminal Memberdecls memberdecls;
non terminal ArrayList<Fielddecl> fielddecls;
non terminal ArrayList<Methoddecl> methoddecls;
non terminal Fielddecl fielddecl;
non terminal Methoddecl methoddecl;
non terminal Expr optionalexpr;
non terminal Boolean optionalsemi;
non terminal String type;
non terminal ArrayList<Argdecl> argdecllist;
non terminal ArrayList<Argdecl> argdecls;
non terminal Argdecl argdecl;
non terminal ArrayList<Stmt> stmts;
non terminal Stmt stmt;
non terminal Stmt ifEnd;
//non terminal Args args;
non terminal ArrayList<Expr> args;
non terminal ArrayList<Name> readlist;
non terminal ArrayList<Expr> printlist;
non terminal ArrayList<Expr> printlinelist;
non terminal Name name;
//non terminal Name name;
non terminal Expr expr;


// production rules

program ::= expr:e
{: RESULT = new Program(e); :}
;

//name := ID
//| ID LEFT_BRKT Expr RT_PAREN
//;

//args := Expr COMMA Args
//|Expr
//;

expr ::= INTLIT: i
// {: RESULT = new Expr(i); :}
| CHARLIT : c
// {: RESULT = new Expression(c):}
| STRINGLIT: str
// {: RESULT = new Expression(str):}
| FLOATLIT: d 
// {: RESULT = new Expression(d):}
| TRUE :t
// {: RESULT = new Expression(t):}
| FALSE : f
// {: RESULT = new Expression(f):}
;
 
